#oauth2
google.app.id=878936760758-6o9jq89n1ph95sfpsducgv8oa8j43c7e.apps.googleusercontent.com
google.app.secret = kiFfZvhNiGpidr0ISDb_6_vr
google.redirect.uri= http://localhost:8080/auth/google
google.link.get.token=https://accounts.google.com/o/oauth2/token
google.link.get.user_info=https://www.googleapis.com/oauth2/v1/userinfo?access_token=
url_google_api=https://accounts.google.com/o/oauth2/auth?scope=openid%20profile%20email&redirect_uri=http://localhost:8080/auth/google&response_type=code&client_id=878936760758-6o9jq89n1ph95sfpsducgv8oa8j43c7e.apps.googleusercontent.com&approval_prompt=force&access_type=offline

# database configurations
spring.datasource.url= jdbc:mysql://localhost:3306/oauth2?useSSL=false
spring.datasource.username=root
spring.datasource.password=Nguyenanh_96
spring.jpa.generate-ddl=true

# hibernate configurations
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialet= org.hibernate.dialect.MySQL5Dialect


#JWT
JWT_EXPIRATIONTIME = 24061996
JWT_SECRET= Nguyenanh

# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query= select u.email, r.role from user u inner join user_role ur on (u.id = ur.user_id) inner join role r on (ur.role_id=r.id) where u.email=?
